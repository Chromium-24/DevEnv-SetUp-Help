This lesson includes initializing an existing code project folder
And more command basics that work for either cloned or initialized
projects.  Note:  LINUX commands and bash syntax apply to both lessons.

============================================================================
Commands Explained:
============================================================================

$ ls -la
  - list files

$ git init
  - builds .git folder and initiates tracking for git
  - do this from the folder you want to initialize

$ git init my_project
  - will build the subfolder and initialize it

$ rm -rf .git
  - removes .git folder and effectively stops tracking this code folder (reverses git init)
  - note:  this is a LINUX command, not a git command (called in bash as a LINUX tool)
  - you will know it worked because after removal of the .git directory, the directory will stop listing with the (branch) 
  - example:  before -- c:\myGitRepo (master)  after -- c:\myGitRepo 
  
$ git status
  - check what is in project and at this stage is untracked
  - can use this command at any time for status of project before executing commands

$ touch .gitignore
  - touch creates a blank text file using name specified
  - .gitignore is used to build a list of files to ignore (edit manually to add files to ignore)
  - .gitignore can take wild card arguments like:  myPattern*.*
  - if using paths to a file, use "/" as in:  myfolder/myfile.txt
  
$ git remote add origin <url to remote project>
  - add local project to remote repository (at URL provided)
  
$ git remote
  - shows all remotes hooked up to this local project (will say "origin" right after previous command)

$ git push -u origin master
  - use -u switch first time only to get content pushed up to new remote repository
  - may be prompted for password to remote repository (or login popup may occur)
  
Then - should be able to use same add, commit, push commands as in lesson 1 once all is set up

=========================================================
Step-by-Step Example - Initializing a Project
=========================================================

$ git init
  - initializes project (in this case - folder with existing code to add to remote repo)
  
$ git status
  - check status of project -- if uncommitted, then execute next command to commit all uncommitted content

$ git commit -a -m "Initial Commit"
  - if this fails, break it apart to these commands:
  - git add .
  - git commit -m "Initial Commit"

$ git remote add origin https://github.com/TheMitchWorksPro/TestProject.git

Note:  Before this step, the above repository must be created on GIT if it is not there already.
* If your local project already has README.MD, .gitignore, or License files - do not create them in the project on GIT
* syntax which follows is for first push only ...

$ git push -u origin master

Subsequent pushes can use:  $ git push



  

